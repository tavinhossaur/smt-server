version: "3.8"

version: "3.8"

services:
  nginx:
    image: nginx:alpine
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - smt-net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://127.0.0.1/nginx-health']
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s

  smt-server:
    image: smt/server:dev
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: ingress
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: dev
      JAVA_OPTS: -Xms256m -Xmx512m
    networks:
      - smt-net
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      endpoint_mode: vip
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/api/v1/health']
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - mongo

  mongo:
    image: mongo:8.0.15-noble
    volumes:
      - mongodata:/data/db
      - ./mongo:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_ROOT_USERNAME: dev
      MONGO_INITDB_ROOT_PASSWORD: dev123
    networks:
      - smt-net
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "mongosh --username dev --password dev123 --authenticationDatabase admin --eval 'db.runCommand(\"ping\").ok' --quiet"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongo-express:
    image: mongo-express
    ports:
      - target: 8081
        published: 8081
        protocol: tcp
        mode: host
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: dev
      ME_CONFIG_MONGODB_ADMINPASSWORD: dev123
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    networks:
      - smt-net
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - mongo

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - target: 8080
        published: 8082
        protocol: tcp
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - smt-net
    deploy:
      placement:
        constraints: [node.role == manager]

volumes:
  mongodata:

networks:
  smt-net:
    driver: overlay