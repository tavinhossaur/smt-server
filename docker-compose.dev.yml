version: "3.8"

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - smt-net
    deploy:
      replicas: 3
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

  smt-server:
    build: .
    image: smt/server:dev
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATA_MONGODB_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/${MONGO_DATABASE_NAME}?authSource=admin&authMechanism=SCRAM-SHA-256
      SECURITY_JWT_SECRET_KEY: ${JWT_SECRET}
      SYSTEM_USER_DEFAULT_PASSWORD: ${DEFAULT_USER_PASSWORD}
      JAVA_OPTS: -Xms256m -Xmx512m
    networks:
      - smt-net
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure

  mongo:
    image: mongo:8.0.15-noble
    volumes:
      - mongodata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - smt-net
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    networks:
      - smt-net
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8082:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - smt-net
    deploy:
      placement:
        constraints: [node.role == manager]

volumes:
  mongodata:

networks:
  smt-net:
    driver: overlay
